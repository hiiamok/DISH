{"name":"DISH","tagline":"Distributed Image Search with Hadoop","body":"# 1. Intro\r\n\r\nDISH consists of 2 different parts\r\n\r\n## a) ImageFeaturesGenerator\r\n\r\nGenerates a file including a list of all images and their imagefeatures (histogram)\r\n\t\r\n## b) ImageSearcher\r\n\r\nTakes a local file, generates imagefeatures and compares them to all other images stored in the ImageFeaturesGenerator generated file\r\n\r\nDISH was developed and tested on Mac OS X Yosemite running Java SDK 8.\r\nThe GUI might look different of other platforms.\r\n\r\n# 2. Usage\r\n\r\n## a) ImageFeaturesGenerator\r\n\r\n    hadoop jar ImageFeaturesGenerator.jar [options]\r\n\t\t\r\n    options:\r\n        -i, --images <path>\t\t\tpath hdfs image directory (default: /images)\r\n        -if, --imagefeatures <path>\tpath to hdfs imagefeatures result (default: /imageFeatures)\r\n        -mb, --maxbytes\t\t\t\tmax memory size of one split (default: 1GB)\r\n        -t, --time\t\t\t\t\tmeasure execution time\r\n        --help\t\t\t\t\t\tprint usage information\r\n\t\t\t\r\n## b) ImageSearcher\r\n\r\n    hadoop jar ImageSearcher.jar [options]\r\n\t\t\r\n    options:\r\n        -s, --search <path>\t\t\tpath to local query image\r\n        -i, --images <path>\t\t\tpath hdfs image directory (default: /images)\r\n        -if, --imagefeatures <path>\tpath to hdfs imagefeatures (default: /imageFeatures)\r\n        -r, --results n\t\t\t\tnumber of results (default: 1)\r\n        -o, --output <path>\t\t\tpath to output (default: /DISH)\r\n        -l, --lines\t\t\t\t\tmax number of lines each mapper reads (default: 10000)\r\n        -t, --time\t\t\t\t\tmeasure execution time\r\n        --help\t\t\t\t\t\tprint usage information\r\n        --cli\t\t\t\t\t\tuse commandline output instead of GUI\r\n\r\nNote: \tBy default the ImageSearcher is trying to open a GUI.\r\nIf you are on a server or want to run it on the command line please use the parameter --cli\r\n\t\t\t\t\r\n# 3. Description\r\n\r\n## a) ImageFeaturesGenerator\r\n\r\nThe ImageFeaturesGenerator takes an input directory of imagefiles, and generates an indexfile of all existing images.\r\n\t\t\r\nThe generated file has the following format: filepath;imagefeatures;\r\nwhere imagefeatures is a String representation of an image histogram.\r\n\r\nThe ImageFeaturesGenerator is implemented as a MapReduce algorithm without Reducer.\r\nFor reading the image files saved on hdfs, a BinaryFileRecordReader was implemented.\r\nTo Combine several BinaryFiles a BinaryFileInputFormat was defined.\r\n\r\nInfo: The output of the ImageFeaturesGenerator will NOT be exactly one file.\r\nSince it was written for distributed usage, each mapper will generate one result-file in the defined output directory.\r\nThis is also useful for the ImageSearcher, because the ImageSearcher can split it's task more easily.\r\nStill the ImageSearcher was designed in a way, that also 1 single input file would result in several mappers.\r\nTherefore it is possible to change the number of lines 1 mapper process reads.\r\n\r\n(see SmallFileProblem for further information)\r\n\r\n## b) ImageSearcher\r\n\r\nThe ImageSearcher is implemented as a MapReduce algorithm with exactly one Reducer.\r\n\r\nThe input for the mapper is the the generated result of the ImageFeaturesGenerator.\r\nTo achieve a better performance of the mapper, not only one line is passed to one mappertask.\r\nEach mapper receives several lines at once, and calculates the euclidian distance for all of them.\r\nThe top n results are passed on to the reducer.\r\n\r\nFor passing results from the mappers to the reducer a Writable ImageDistanceMap was implemented.\r\n\r\nIt is only 1 reducer called! The reducer receives all top-lists of the mappers.\r\nIt then sorts this list, and gets the top n matching items, and writes them into an output file.\r\n\t\t\r\nIn CLI mode the output file is read and printed.\r\nIf the GUI is started, the result file is read, and all result-images are loaded from hdfs displayed.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}